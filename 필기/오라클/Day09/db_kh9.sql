CREATE TABLE USERTBL
(
    USERNO NUMBER UNIQUE,
    ID VARCHAR2(20) PRIMARY KEY,
    PASSWORD CHAR(20) NOT NULL
);

INSERT INTO USERTBL VALUES(1, 'test1', 'password1');
INSERT INTO USERTBL VALUES(2, 'test2', 'password2');
INSERT INTO USERTBL VALUES(3, 'test3', 'password3');

COMMIT;


SELECT * FROM USERTBL;

UPDATE USERTBL
SET PASSWORD='pass22'
WHERE ID='test3';

savepoint sp1;

rollback to sp1;

UPDATE USERTBL
SET PASSWORD='pass22'
WHERE ID='test2';

commit;


select * from all_tables;


-- 회사와 협력한 헬스장
-- EMPLOYEE 테이블을 편집한 정보를
-- 가지고 있는 별도의 테이블 생성

CREATE TABLE EMPLOYEE_Health
AS SELECT EMP_ID, EMP_NAME
FROM EMPLOYEE;

SELECT * FROM EMPLOYEE;
DESC EMPLOYEE;

SELECT * FROM EMPLOYEE_HEALTH;
INSERT INTO EMPLOYEE
VALUES ('223','정수지','920101-1001010',
        'jungjisoo@kh.or.kr','01011112222',
        'D1','J6','S4',4000000,
        0.1,217,SYSDATE,NULL,'N');
        
        COMMIT;
        
ROLLBACK;

-- 뷰 생성
CREATE VIEW EMP_HEALTH_VIEW
AS SELECT EMP_ID, EMP_NAME 
FROM EMPLOYEE;

-- 뷰 확인
SELECT * FROM EMP_HEALTH_VIEW;

-- 뷰 삭제
DROP VIEW EMP_HEALTH_VIEW;

INSERT INTO EMPLOYEE
VALUES ('223','정수지','920101-1001010',
        'jungjisoo@kh.or.kr','01011112222',
        'D1','J6','S4',4000000,
        0.1,217,SYSDATE,NULL,'N');
        
        COMMIT;
        
UPDATE EMP_HEALTH_VIEW
SET EMP_NAME = '정슈지'
WHERE EMP_ID='223';

SELECT * FROM DEPARTMENT;

CREATE VIEW EMP_INFO_VIEW(사원ID, 사원이름, 부서명)
AS SELECT EMP_ID, EMP_NAME,DEPT_TITLE
FROM EMPLOYEE LEFT JOIN DEPARTMENT ON (DEPT_CODE=DEPT_ID);

DELETE FROM EMPLOYEE WHERE EMP_ID='223';
COMMIT;

SELECT * FROM USERTBL;


CREATE SEQUENCE USERTBL_NO_SEQ	-- USERTBL_NO_SEQ 라는 시퀀스 객체 생성
START WITH 1			-- 시작번호는 1번 부터
INCREMENT BY 1			-- 1씩 증가
MAXVALUE 100			-- 최대 100까지
NOCYCLE				-- 100 이후에는 증가하지 말고 에러 발생 하여라
NOCACHE;			-- 캐쉬 방식은 사용하지 않겠음

SELECT * FROM USER_SEQUENCES;
COMMIT;

INSERT INTO USERTBL VALUES(USERTBL_NO_SEQ.NEXTVAL,'test6','pass6');

SELECT * FROM USERTBL;

SELECT USERTBL_NO_SEQ.NEXTVAL FROM DUAL;
SELECT USERTBL_NO_SEQ.CURRVAL FROM DUAL;

SELECT * FROM USER_SEQUENCES;


CREATE TABLE KH_MEMBER
(
    MEMBER_ID NUMBER,
    MEMBER_NAME VARCHAR2(20),
    MEMBER_AGE NUMBER,
    MEMBER_JOIN_COM NUMBER
);

CREATE SEQUENCE KH_ID_SEQ
START WITH 500
INCREMENT BY 10
MAXVALUE 10000
NOCYCLE
NOCACHE;

CREATE SEQUENCE KH_JOIN_COM_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 10000
NOCYCLE
NOCACHE;

INSERT INTO KH_MEMBER
VALUES(KH_ID_SEQ.NEXTVAL, '홍길동', 20, KH_JOIN_COM_SEQ.NEXTVAL);
INSERT INTO KH_MEMBER
VALUES(KH_ID_SEQ.NEXTVAL, '김말똥', 30, KH_JOIN_COM_SEQ.NEXTVAL);
INSERT INTO KH_MEMBER
VALUES(KH_ID_SEQ.NEXTVAL, '삼식이', 40, KH_JOIN_COM_SEQ.NEXTVAL);
INSERT INTO KH_MEMBER
VALUES(KH_ID_SEQ.NEXTVAL, '고길똥', 24, KH_JOIN_COM_SEQ.NEXTVAL);

SELECT * FROM KH_MEMBER;

SELECT * FROM USER_SEQUENCES;


SELECT * FROM USER_IND_COLUMNS;

CREATE INDEX EMP_INDEX ON EMPLOYEE(EMP_ID,EMP_NAME,SALARY);

SELECT EMP_ID FROM EMPLOYEE;
SELECT EMP_NAME FROM EMPLOYEE;
SELECT SALARY FROM EMPLOYEE;
SELECT EMP_ID,EMP_NAME,SALARY FROM EMPLOYEE;
SELECT EMP_ID,EMP_NAME,SALARY,HIRE_DATE FROM EMPLOYEE;

SELECT EMP_NO FROM EMPLOYEE;

DROP INDEX EMP_INDEX;

SELECT * FROM USER_IND_COLUMNS
WHERE INDEX_NAME = 'EMP_INDEX';

-- SYNONYM 생성
CREATE SYNONYM EMP FOR EMPLOYEE;
-- SYNONYM 확인
SELECT * FROM EMP;
-- SYNONYM 삭제
DROP SYNONYM EMP;

SELECT * FROM DEPT;


