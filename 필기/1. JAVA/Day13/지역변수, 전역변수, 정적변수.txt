

@ 지역변수, 전역변수, 정적변수(클래스변수)
-> 우리가 클래스 안에서 생성하는 변수들은 크게 3가지가 있음 (지역,전역,정적(클래스) 변수)
-> 지역변수 : 해당 지역(메소드)안에서만 사용가능한 변수
	-> 메소드가 호출될때 생성되고 메소드가 종료될때 메모리에서 삭제됨
	-> Stack 메모리 영역에 생성 

-> 전역변수 : 해당 클래스안에서 사용 가능한 변수 (객체 생성시 해당 객체만 사용 가능)
	-> 객체가 생성될때 생성되고 객체가 소멸할때 메모리에서 삭제 됨
	-> Heap 메모리 영역에 생성

-> 정적변수 : 객체와 상관없이 사용 가능한 변수
	-> private으로 생성시 실제 생성된 객체끼리 공유
	-> public 으로 생성시 어디서든 사용 가능
	-> 프로그램 시작시 생성되고 프로그램 종료시 삭제 됨
	-> Static 메모리 영역에 생성
	
ex)

public class Test{
	private int globalVal; // 전역변수 
	private static int staticVal; // 정적변수
	public void local(){
		int localVal; // 지역변수
	}
}



@ final 키워드
-> 상수화 시키는 키워드
-> 변수 데이터 타입 앞에 final 키워드를 붙이면 상수화 시키겠다 라는 의미가 됨


int a = 10; // 10을 담고 있는 a라는 변수
final int a = 10; // 10을 담고 있는 a라는 상수

-> static을 명시하면서 final 키워드를 붙이게 되면 어디서든 사용가능한 상수 라는 의미가 됨

ex) public static final int RED=0xFF0000; 


※ 꼭 기억해야 하는 것은 final 변수는 명명규칙에 의하여 대문자를 사용





@ 메소드에 사용되는 static 키워드 와 final 키워드
-> 우리가 정적을 의미하는 키워드인 static을 메소드에 명시하게 되면
해당 메소드는 이제 더이상 객체의 메소드가 아닌 클래스의 메소드가 되기 때문에
따로 객체를 만들고 사용하지 않아도 됨 (즉석 사용이 가능함)


-> 메소드에 final 키워드를 붙이게 되면 메소드 오버라이딩을 막겠다는 의미
-> 클래스에 final 키워드를 붙이게 되면 상속을 막겠다는 의미




























