@ 자바란?
-> 자바는 1995년 자바의 아버지라 불리는 '제임스 고슬링'과 그의 동료들이 함께 만든
프로그래밍 언어
-> 초기 자바는 전기밥통과 같은 가전제품을 제어하기 위한 언어로 고안 했었음
-> 웹이 등장하면서 자바가 웹을 통해 엄청난 성공을 거두며 주류 언어로 자리 잡았고, 현재 국내에서는
정부 및 기업의 시스템 통합 프로젝트가 대부분 자바를 기반으로 이루어 지고 있음


	* 시스템 통합(System Integration:SI) 
		- 어떤 조직이나 깅버에서 이뤄지는 여러가지 활동을 소프트웨어화 하고 정보화 하는것
		- 대학교라면 학사 일정과 업무를 처리하는 학사 시스템, 병원이라면 환자를 더 효율적으로
		진료할 수 있게 도와주는 진료 시스템 등..

-> 최근에는 모바일 플랫폼인 '안드로이드(Android)'가 엄청난 성공을 거두며 자바의 수요가 급증하고 있음
	* http://pypl.github.io/PYPL.html : 튜토리얼 조회수 기준 순위
	* https://www.tiobe.com/tiobe-index/ : 실제 실무에서 사용되고 있는 언어 기준



@ 프로그래밍

1. 프로그래밍 관련 용어
	- 프로그램 : 컴퓨터를 작동시키기 위한 순차적으로 작성된 일련의 명령어들의 모음
	- 프로그래밍 : 프로그램을 만드는 행위, 프로그램 개발을 의미함
	- 프로그래머 : 프로그램을 만드는 사람, 프로그램 개발자를 의미함
	- 프로그래밍 언어 : 프로그램을 작성하기 위해 사용되어 언어
			사람이 이해하기 쉬운 언어를 고급언어
			기계가 이해하기 쉬운 언어를 저급언어
	- 소프트웨어(SoftWare) : 컴퓨터를 효율적으로 운영하기 위해 개발된 프로그램


2. 자바의 특징
-> 객체 지향 언어
-> 운영체제의 독립적
-> 사용하기 쉬운 언어 (공부를 했을시 타 언어에 비해)
-> 능률적이고 명확한 코드를 작성하게 해줌
-> 자동적으로 메모리 관리를 함 (Garbage Collection)





3. 저급언어와 고급언어
- 저급언어 (Low Level Language)
	- 기계 중심의 언어
	- 프로그래밍을 하기 어려우며, 에러발생시 수정이 어려움
	- 기계 자체 언어 이므로 번역이 필요 없고 빠름
	- 기계어, 어셈블리어 등..

- 고급언어 (High Level Language)
	- 사람 중심의 언어, 컴파일 언어(번역)
	- 프로그래밍을 하기 비교적 쉬우며, 에러발생시 수정이 쉬움
	- 실행하기 위해 기계어로 번역해야 하며 느림
	- C, C++, C#, Java, Python, Ruby 등..


4. 실행측면에서의 언어
- 컴파일러 언어
	=> 완성된 소스 코드 자체로는 실행될 수 없고, 컴파일러(번역기)를 이용해 컴파일한 후에
	만들어진 번역된 소스코드가 실제 실행 프로그램이 됨
	=> C, C++, Java, C# 등

- 인터프리터 언어
	=> 컴퓨터에 상주해 있는 인터프리터(실행기)가 소스 코드를 한 문장씩 읽어서 바로바로 실행함
	=> Basic, LISP, JavaScript, Perl, Python 등..
	=> 스크립트 언어들은 인터프리터에 속함









