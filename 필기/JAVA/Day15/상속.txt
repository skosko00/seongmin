
@ is a 상속
-> A is a B : A 는 B 다 라는 뜻
-> 즉, A는 B를 상속 받아 결국 A는 B의 것을 가지게 됨
-> 객체지향 프로그래밍에서는 상속이라는 개념을 사용함
	※ 상속 이라는 뜻은 유산 상속과 같음
	가령 아버지(부모)가 아들(자식)에게 유산을 상속하게 되면
	아들은 아버지의 유산을 상속 받게 되어 재산이 늘어나게 됨

아버지의 재산 : 10억
아들의 재산 1억

## 생각해보자 ##
만약 아버지가 아들에게 유산 상속을 하게 되었을 때 재산은 얼마가 되겠는가?

상속 받은 필드가 private 이라면?
-> 자식 클래스에서는 상속 받은 private 되어 있으면 직접 적인 접근은 불가능
-> 그러나 상속받은 필드에 접근하기 위해 필요성이 있을때에는 크게 3가지 방법을
통해 접근 할 수 있다

1. 필드는 private으로 선언하지 않고 protected로 선언하는 방법
2. setter를 이용하는 방법
	- 부모의 setter를 이용해야 함
3. 부모 생성자를 호출하는 방법(키워드 super)
	- super 키워드는 부모 생성자를 호출하는 키워드
	- 자식 생성자에서 사용 할 수 있는 키워드