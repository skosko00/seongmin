

@ 제어문
-> 순차적인 흐름을 조건에 따라 통제하는 문법
-> 사용자의 선택에 따라 프로그램이 동작할 수 있음


@ 제어문의 종류

-> 조건문
	- if, if else, else if

-> 반복문
	- while, do while, for

-> 선택문
	- switch case

-> 흐름변경문
	- continue, break



@ if문
-> 조건식의 결과 값이 참(true)면 {  } 안에 있는 코드를 실행 함 (false면 실행 안함)


### 표현식 ###

if( 조건식 ){

	실행코드

} 


예제1)

		Scanner sc = new Scanner(System.in);
		int su;
		System.out.print("10을 입력하세요");
		su = sc.nextInt();
		if(su==10)
		{
			System.out.println("잘 따라하는군요");
		}
		






@ if - else
-> 둘 중 한개를 선택하는 조건문으로 조건이 참인 경우와 거짓인 경우에 수행하는 명령이 다름
-> if문의 조건이 만족하지 못하면 else문이 수행 됨
	※ else에는 조건식을 사용할 수 없음

### 표현식 ###

if(조건식)
{
	실행코드1
}
else
{
	실행코드2
}



예제)
		Scanner sc = new Scanner(System.in);
		int su;
		System.out.print("정수 입력:");
		su = sc.nextInt();
		if(su>0)
		{
			System.out.println("입력 값은 0보다 크다");
		}
		else
		{
			System.out.println("입력 값은 0보다 크지 않다.");
		}



@ 중첩 if 문
-> if 문 문법을 중첩으로 사용이 가능함

### 표현식 ###
 
if(조건문1)
{
	if(조건문2){

	실행문1;

	}else{

	실행문2;
	}

}else{

	실행문3;
}


예제 코드)

	Scanner sc = new Scanner(System.in);
		  int num1;
		  System.out.print("1부터 100까지의 수 중 선택: ");
		  num1 = sc.nextInt();
		  if(num1 > 0 && num1 <= 100){ 	
			if(num1%2==0) System.out.printf("입력한 수는 짝수 입니다\n");
			else System.out.printf("입력한 수는 홀수 입니다\n");
		  }else{  //조건이 거짓일 때
			  System.out.printf("잘못된 수를 입력하였습니다.");
		  }




@ else if 문
-> if문과 else은 둘 중 하나만 선택 해야 함
-> else if는 다중 조건을 줄 수 있는 문법

### 표현식 ###

if(조건문1){
	실행문 1;	
}else if(조건문2){
	실행문 2;
} ...

else if(조건문n){
	실행문n;

}else{

	실행문;
}



예제코드)

		Scanner sc = new Scanner(System.in);
		  int num1;
		  System.out.printf("Input Number 1 ~ 3 :");
		  num1 = sc.nextInt();
		  if(num1 == 1){
			  System.out.printf("One !"); 	
		  }else if(num1 == 2){
			  System.out.printf("Two !");
		  }else if(num1 == 3){  
			  System.out.printf("Three !");
		  }else {  
			  System.out.printf("Error !");
		  }





























