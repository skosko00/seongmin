
@ String API
-> 문자열을 사용하는 API의 다양함
-> 그 중 우리는 String, StringBuffer, StringBuilder 만 다루도록 하겠음


@ String 클래스
-> 문자열 값을 수정 하지 못 하는 immutable(불변)임
-> 수정시 수정된 문자열이 새로 할당되어 새 주소를 넘김
-> 문자열을 자주 수정시 메모리 낭비가 심함

@ String Buffer 클래스
-> 문자열 값을 수정 할 수 있는 mutable(가변) 임
-> 문자열을 자주 변경시 String 보다 유용함
-> 기존 문자열에 수정되어 적용 됨 (수정, 삭제 등)
-> 기본 16문자 크기로 지정된 버퍼를 이용하며, 수정시 크기가 증가 될 수 있음
	- 문자열을 넣은 뒤에 16개의 버퍼 공간이 생김
	(문자열을 16글자까지 추가하여도 공간이 재할당 되지 않음)
	- 버퍼 공간이 넘치게 되면 (기존길이+버퍼길이+1)x2 만큼의 공간이 할당 됨
-> 쓰레드 safe 기능을 제공 함(성능저하 요인)
	※ 쓰레드 safe 기능은 동시에 한 자원에 접근하지 못하게 잠그는 기능

## StringBuffer의 주요 메소드 ##
-> capacity 메소드 : 실제 할당된 공간의 크기를 알 수 있음
-> length 메소드 : 실제 문자열 길이를 알 수 있음
-> reverse 메소드 : 저장된 문자열을 거꾸로 재배치함 (12345 -> 54321)
-> insert 메소드 : 문자열의 특정 위치에 문자열을 추가
-> append 메소드 : 문자열 끝에 문자열을 추가
-> delete 메소드 : 문자열의 일부분을 삭제
-> replace 메소드 : 문자열의 일부분을 다른 문자열로 대치


@ StringBuilder 클래스
-> StringBuffer와 같음
-> 단, 쓰레드 safe 기능을 제공하지 않음

