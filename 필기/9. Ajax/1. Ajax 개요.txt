

@ Ajax
-> Asynchronous JavaScript and XML 이란 용어로써 2005년 2월 제시 제임스 카렛이 처음 사용하면서 알려지게 되었음
-> 서버로부터 데이터를 가져와 전체 페이지를 새로 고치지 않고 일부만 로드할 수 있게 하는 기법으로 비동기식
요청을 보내는데 필요한 기술을 말함


@ Ajax의 장단점
## 장점 ##
-> 비동기식 방식으로 웹 서버의 응답을 기다리지 않고 데이터를 빠르게 처리함
-> 페이지 리로딩 없이 처리됨
예) 실시간 검색어, 검색어 자동 완성, 아이디 중복 체크 등등...

## 단점 ##
-> 한 페이지에 지속적으로 사용시 리소스가 계속 쌓여 페이지가 느려짐
-> 스크립트로 되어 있어 에러 발생시 디버깅이 어려움


@ 동기식 처리 와 비동기식 처리

## 동기식 처리 모델 ##
-> 페이지가 로드 되는 동안 브라우저가 script문을 실행하게 되면 그 실행이 종료 될 때 까지 나머지 페이지를
로드하지 않고 기다리고 있다가 그 script 문이 처리 종료 되면 페이지의 나머지 부분을 로드하는 방식


## 비동기식 처리 모델 ##
-> 페이지가 로드 되는 동안 브라우저는 먼저 서버에 데이터 요청 script문을 실행 한 후 브라우저는 요청한
데이터를 기다리고 있지 않음 (멀티 쓰레드 같은 방식)


※ Ajax는 JavaScript 방식과 jQuery 방식이 있음
-> 그 중 실제로 많이 사용하는 방식은 jQuery 방식
	- 코드가 간결하고 크로스 브라우징 문제를 해결 해 줌



@ 처리 절차
1. script 문에 요청을 위한 XMLHttpRequest 객체 생성
2. 서버에 응답을 처리할 함수 생성 및 지정
	※ 함수는 onreadystatechange에 함수를 지정
3. open 메소드로 요청할 방법 및 요청할 대상(Server) 선정
	※ 요청 메소드, 요청 주소, 동기/비동기 설정
4. send 메소드로 대상(Server)에 전송
	※ post 일 때 파라미터 값 설정 / get 일때는 매개변수값 없음
5. 응답 상태에 따라 상태 확인
	※ readyState(데이터 응답) / status(처리결과) 값을 이용
6. 응답 완료 처리 (responseText를 이용하여 처리)


