


@ 배열
-> 다양한 타입의 데이터를 보관하는 변수의 모음
	- 자바, C 등의 언어들은 같은 데이터 타입을 저장하는 변수들의 모음이지만
	자바스크립트는 데이터 타입이 상관 없음

-> '[ ]'(대괄호)를 통해 생성과 초기화를 동시에 처리 가능함
-> 자료형 지정이 없어 모든 자료형(숫자,문자열, 함수, boolean, undefined, 객체 등등)이
	데이터로 저장 가능함 (자바로 치면 컬렉션과 매우 흡사함)


var 배열명 = [값1(숫자),값2(문자),값3(객체)... 등등];
	-> 여러 가지 타입을 동시에 배열에 저장이 가능함


@ 배열 선언
-> new 연산자와 Array 객체를 통한 배열 선언
-> 배열 크기를 정하지 않고 선언 / 배열 크기를 정하는 선언

## 배열의 길이를 정하지 않은 배열 선언 ##
var 변수명 = new Array();

## 배열의 길이를 정한 배열 선언 ##
var 변수명 = new Array(숫자);

## 배열의 초기값을 정한 배열 선언1 ##
var 변수명 = new Array(값1, 값2, 값3 ...);

## 배열의 초기값을 정한 배열 선언2 ##
var 변수명 = [값1, 값2, 값3 ...];

ex)

var arr1 = new Array(1,2,3); // 초기값을 넣고 배열이 생성됨
var arr2 = [1,2,3]; // new  연산자를 쓰지 않아도 배열이 자동 생성 됨
var arr3 = new Array(); // 초기값을 넣지 않도록 배열을 생성할 수 있음
var arr4 = new Array(5); // 초기값을 넣고 배열을 생성할 수 있음

※ new Array()로 선언시 배열의 길이는 0이 되고 데이터가 추가 될 때 마다 자동으로
1개씩 배열 공간이 늘어남


@ 배열에 값 대입
-> 값을 입력시에 index 번호를 활용
-> 번호 범위 0부터 시작함 (마지막은 길이의 -1 번째) - 자바와 같음


var arr = new Array(5);
arr[0] = 123;
arr[1] = 234;
arr[2] = 345;
arr[3] = 456;
arr[4] = 567;


@ 배열 객체 함수
-> 자바스크립트에서 사용하는 배열도 하나의 객체이기 때문에 배열에서 활용할 수 있는 메소드가 있음

배열명.indexOf('값')	: 배열에서 '값'이 위치한 인덱스 리턴
배열명.concat(배열명)	: 두 개 또는 세 개의 배열을 결합 함
배열명.join()		; 배열을 결합하고 문자열로 반환
배열명.reverse()	: 배열의 순서를 반대로 배치함
배열명.sort()		: 배열의 내림차순 또는 오름차순으로 정렬함
	- sort는 문자열을 정렬하는 함수
	- 숫자가 있어도 자동으로 문자열로 변경되어 정렬을 처리함
배열명.push('값')	: 배열의 맨 뒤에 새로운 요소를 추가함
배열명.pop()		: 배열의 맨 뒤에 있는 요소를 제거함
배열명.shift()		: 배열의 맨 첫번째 요소를 제거함
배열명.unshift('값')	: 배열의 맨 앞에 새로운 요소를 추가함
배열명.toString()	: 배열을 문자열로 변환


## indexOf ##
-> 문자열을 입력하여 처음으로 나오는 위치를 반환 함
	※ 없으면 -1을 반환

<p>다음 중 좋아하는 과일을 작성하시오</p>
<p>바나나 / 딸기 / 복숭아 / 수박</p>
<input type="text" id="fruit">
<button onclick="arrayTest();">출력</button>

<script type="text/javascript">
    function arrayTest()
    {
        var fruits = ["바나나","딸기","복숭아","수박"];
        var id=document.getElementById("fruit");
        
        var index = fruits.indexOf(id.value);
        if(index>=0)
            {
                alert("배열의 "+index+"번째에 해당하는 과일이 존재합니다");
            }
        else
            {
                alert("입력하신 과일은 배열에 존재하지 않습니다.");
            }
    }
</script>



## concat ##
-> 여러개의 배열들을 결합할 때 사용하는 변수

<button onclick="arrayTest();">출력</button>

<script type="text/javascript">
    function arrayTest()
    {
        var arr1 = ["사과","딸기"];
        var arr2 = ["햄버거","돈까스","치킨"];
        var arr3 = [10,20,30,40,50,60];
        var arr4 = [true,false];
        
        console.log(arr1);
        console.log(arr2);
        console.log(arr3);
        console.log(arr4);
        
        var arrays = arr1.concat(arr2,arr3,arr4);
        console.log(arrays);
    }
</script>

※ 결합에 사용된 원본 배열들의 데이터는 영향을 받지 않음

## join() ##
-> 배열을 결합하고 문자열로 반환 (하나의 배열안에 있는 요소들을 하나의 문자열로 묵음)
-> join 함수 안에 있는 것을 구분자로 사용

<p1 id="p1"></p1>
<button onclick="arrayTest();">출력</button>

<script type="text/javascript">
    function arrayTest()
    {
        var arr = [10,20,30,40,50,60];
        var newarr = arr.join(" ");
        console.log(arr);
        document.getElementById("p1").innerHTML = arr+"<br>";
        console.log(newarr);
        document.getElementById("p1").innerHTML += newarr;
    }
</script>


## reverse() ##
-> 배열안에 있는 요소들을 거꾸로 배치할때 사용

<p1 id="p1"></p1>
<button onclick="arrayTest();">출력</button>

<script type="text/javascript">
    function arrayTest()
    {
        var arr = [10,20,30,40,50,60];
        document.getElementById("p1").innerHTML = arr.reverse();
    }
</script>


## sort() ##
-> 정렬할때 사용하는 함수
-> 단, 문자열로 처리 되어 정렬 됨!

<p1 id="p1"></p1>
<button onclick="arrayTest();">출력</button>

<script type="text/javascript">
    function arrayTest()
    {
        var arr = [5,10,7,1,9,8,2,4];
        arr.sort(ASC); //함수명을 넣어주면 됌
        document.getElementById("p1").innerHTML = arr;
    }
    function ASC(a,b)
    {
        return a-b;
    }
    function DESC(a,b)
    {
        return b-a;
    }
</script>


## push 와 pop ##
-> 배열 요소를 추가할때에는 push 함수를 사용
-> 배열 요소를 삭제할때에는 pop 함수를 사용
	※ 실제로 push를 사용하지 않아도 자동으로 추가가 되지만 push가 표준임

<input type="text" id="text"/>
<button onclick="arrayTest();">추가</button>
<button onclick="arrayTest2();">삭제</button>
<script type="text/javascript">
    var arr=["곽영훈","정지수"];
    function arrayTest()
    {
        arr.push(document.getElementById("text").value);
        console.log(arr);
        document.getElementById("text").value="";
    }
    function arrayTest2()
    {
        arr.pop();
        console.log(arr);
    }

※ push와 pop은 배열의 마지막에 추가 된다는 점을 기억하세요


## shift() 와 unshift() ##
-> push와 pop처럼 요소를 추가 및 삭제하는 함수
-> 단, 마지막이 아닌 맨 처음에 추가하는 함수
-> shift 함수가 삭제, unshift 함수가 추가



## toString() ##
-> 배열 요소를 문자열로 변경하여 출력
-> 기본적으로 배열을 출력시 자동 toString()을 호출함

<p id="p1"></p>
<button onclick="arrayTest();">출력</button>
<script type="text/javascript">
    function arrayTest()
    {
        var arr = [1,2,3,4,5];
        
        document.getElementById("p1").innerHTML = arr;
        
//        document.getElementById("p1").innerHTML = arr.toString();
        console.log(arr);
        console.log(arr.toString());
    }
</script>

